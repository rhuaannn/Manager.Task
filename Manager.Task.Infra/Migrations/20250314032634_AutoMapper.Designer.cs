// <auto-generated />
using System;
using Manager.Task.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Manager.Task.Infra.Migrations
{
    [DbContext(typeof(DbContextApi))]
    [Migration("20250314032634_AutoMapper")]
    partial class AutoMapper
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Manager.Task.Domain.Task.ManagerTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ManagerTasks");
                });

            modelBuilder.Entity("Manager.Task.Domain.Task.ManagerTask", b =>
                {
                    b.OwnsOne("Manager.Task.Domain.ValueObject.Description", "Description", b1 =>
                        {
                            b1.Property<Guid>("ManagerTaskId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("DescriptionTask")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("ManagerTaskId");

                            b1.ToTable("ManagerTasks");

                            b1.WithOwner()
                                .HasForeignKey("ManagerTaskId");
                        });

                    b.OwnsOne("Manager.Task.Domain.ValueObject.Title", "Title", b1 =>
                        {
                            b1.Property<Guid>("ManagerTaskId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("TitleTask")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("ManagerTaskId");

                            b1.ToTable("ManagerTasks");

                            b1.WithOwner()
                                .HasForeignKey("ManagerTaskId");
                        });

                    b.Navigation("Description");

                    b.Navigation("Title");
                });
#pragma warning restore 612, 618
        }
    }
}
